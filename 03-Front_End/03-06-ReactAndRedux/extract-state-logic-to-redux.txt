// define ADD, addMessage(), messageReducer(), and store here:
//First define you action type here
const ADD = "ADD"
//Next, define an action creator addMessage() which creates the action to add a message. You'll need to pass a message to this action creator and include the message in the returned action.
const addMessage = message => {
  return{
    type: ADD,
    message
  };
};

//Then create a reducer called messageReducer() that handles the state for the messages. The initial state should equal an empty array. 

// // Use ES6 default paramter to give the 'previousState' parameter an initial value.
const messageReducer = (previousState = [], action) => {
// This reducer should add a message to the array of messages held in state, or return the current state.

 // Use switch statement to lay out the reducer logic in response to different action type
 switch (action.type) {
   case ADD: 
    // Use ES6 spread operator to return a new array where the new message is added to previousState
    return [...previousState, action.message];
    break;

    default:
     // A default case to fall back on in case if the update to Redux store is not for this specific state.
     return previousState;
 }
};

//Finally, create your Redux store and pass it the reducer.

const store = Redux.createStore(messageReducer);